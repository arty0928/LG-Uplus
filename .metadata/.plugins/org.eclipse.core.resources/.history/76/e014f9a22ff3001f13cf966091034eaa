package graph_0225;

import java.io.*;
import java.util.*;

/*
 * 
 */
public class Main_16562_G4_친구비 {
	
	static int V,E,W;
	static int[] parents, weight;

	static int find(int v) {
		if(parents[v] == v) return v;
		
		return parents[v] = find(parents[v]);
	}
	
	static boolean union(int a, int b) {
		int aRoot = find(a);
		int bRoot = find(b);
		
		if(aRoot == bRoot) return false;

		// 더 작은 친구비로
		if (aRoot < bRoot) {
		    parents[bRoot] = aRoot;
		} else {
		    parents[aRoot] = bRoot;
		}

		parents[aRoot] = bRoot;
		
		return true;
	}
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		V = Integer.parseInt(st.nextToken());
		E = Integer.parseInt(st.nextToken());
		W = Integer.parseInt(st.nextToken());
		
		st = new StringTokenizer(br.readLine());
		weight = new int[V];
		
		for (int i = 0; i < V; i++) {
			weight[i] = Integer.parseInt(st.nextToken());
		}
		
		parents = new int[V];
		Arrays.fill(parents, Integer.MAX_VALUE);
		
		
		
	}

}
