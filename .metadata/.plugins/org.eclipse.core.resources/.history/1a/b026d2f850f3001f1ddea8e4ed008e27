package graph_0225;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

import graph_0225.Main_1922_G4_네트워크연결.Edge;

public class Main_1197_최소스패닝트리 {

	static int V,E;
	static int[] parents;
	static Edge[] edgeList;
	
	static void make() {
		parents = new int[V+1];
		
		for (int i = 1; i <= V; i++) {
			parents[i] = i;
		}
	}
	
	static int find(int a) {
		if(parents[a] == a) return a;
		
		return parents[a] = find(parents[a]);
	}
	
	static boolean union(int a, int b) {
		int aRoot = find(a);
		int bRoot = find(b);
		
		if(aRoot == bRoot) return false;
		
		parents[aRoot] = bRoot;
		
		return true;
	}
	
	static class Edge implements Comparable<Edge>{
		int from,to,weight;

		@Override
		public int compareTo(Edge o) {
			return this.weight - o.weight;
		}

		public Edge(int from, int to, int weight) {
			super();
			this.from = from;
			this.to = to;
			this.weight = weight;
		}
		
	}
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		V = Integer.parseInt(br.readLine());
		E = Integer.parseInt(br.readLine());
		
		edgeList = new Edge[E];
		StringTokenizer st;
		
	}

}
