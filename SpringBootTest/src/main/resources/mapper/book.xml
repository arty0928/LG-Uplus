<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 패키지 포함한 mapper(DAO interface) 이름으로 설정 한다. -->
<mapper namespace="com.uplus.eureka.book.model.dao.BookDao">

	<!-- 자주 사용하는 쿼리를 상용구 처럼 sql 태그를 이용해서 등록해서 재사용할 수 있다. ${테이블명, 컬럼명, 쿼리 주입}-->
	<sql id="searchCon">
		<if	test="key != 'all' and word != null and word != ''">
			<choose>
				
				<when test="key == 'isbn'">
					isbn like concat('%', #{word}, '%')
				</when>

				<when test="key == 'title'">
					title like concat('%', #{word}, '%')
				</when>
				
				<when test="key == 'author'">
					author like concat('%', #{word}, '%')
				</when>
	
			</choose>
		</if>
	</sql>
	


	<!--	id : mapping될 함수 이름으로 설정 
			parameterType : 메서드 인자 타입 
			resultType : 쿼리를 수행한 결과(컬럼 데이타)를 담을 클래스 타입 
						==> return 타입	
		
			
		미리 등록된 Alias : mybatis-xxx.jar > org.apache.ibatis.type.TypeAliasRegistry 에서 확인		
	
	-->
	
	
	<!-- 속성명이 칼럼명과 다르다면 as Alias 로 컬럼명을 속성명과 동일하게 해주면 됨. -->
	<select id="search"		parameterType="string" 		resultType="Book">
		select isbn, title, author, price, describ, img
		from book
		where isbn = #{isbn}
	</select>
	
	<!-- 
		resultType은 select문을 수행한 결과 중 1개 row를 매핑할 타입을 설정한다. 
		MyBatis가 List 객체를 생성해서 매핑한 객체를 add 해준다.
	
	-->
	<select id="searchAll"	parameterType="PageBean"	resultType="Book">
		select * from book
		
		<where > <!-- where 태그는 조건이 있으면 where가 추가되고 없으면 where 절이 추가되지 않는다. -->
			<include refid="searchCon"/>
		</where>
		
		order by isbn
		limit #{start}, #{interval}
		
	</select>
	
	<select id="totalCount" parameterType="PageBean"	resultType="int">
		select count(*) from book
		
		<where > <!-- where 태그는 조건이 있으면 where가 추가되고 없으면 where 절이 추가되지 않는다. -->
			<include refid="searchCon"/>
		</where>
		
	</select>
	
	<insert id="insert"		parameterType="Book">
		insert into book (isb, title, author, price, describ, img)
		values(#{isbn}, #{title}, #{author}, #{price}, #{describ}, #{img})
	</insert>
	
	<update id="update"		parameterType="Book">
		update book set
		title = #{title}, author = #{author},
		price = #{price}, describ = #{describ}, img = #{img}
		where isbn= #{isbn}
	</update>
	
	
	<delete id="remove"		parameterType="string">
		delete from book where isbn = #{isbn}
	</delete>
	
	
	
	
</mapper>


